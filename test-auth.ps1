# Script de teste do sistema de autentica√ß√£o

Write-Host "üîç Verificando configura√ß√£o do sistema de autentica√ß√£o..." -ForegroundColor Cyan
Write-Host ""

# Verifica arquivos necess√°rios
$arquivos = @(
    "src/lib/supabase.js",
    "src/context/AuthContext.jsx",
    "src/pages/Login.jsx",
    "src/components/ProtectedRoute.jsx",
    "src/lib/api.js",
    "server/authMiddleware.js",
    "supabase_auth_config.sql",
    ".env.local"
)

$todosOk = $true

foreach ($arquivo in $arquivos) {
    if (Test-Path $arquivo) {
        Write-Host "‚úÖ $arquivo" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $arquivo (n√£o encontrado)" -ForegroundColor Red
        $todosOk = $false
    }
}

Write-Host ""

# Verifica vari√°veis de ambiente
Write-Host "üîë Verificando vari√°veis de ambiente..." -ForegroundColor Cyan

if (Test-Path .env.local) {
    $envContent = Get-Content .env.local -Raw
    
    if ($envContent -match "VITE_SUPABASE_URL") {
        Write-Host "‚úÖ VITE_SUPABASE_URL configurada" -ForegroundColor Green
    } else {
        Write-Host "‚ùå VITE_SUPABASE_URL n√£o encontrada" -ForegroundColor Red
        $todosOk = $false
    }
    
    if ($envContent -match "VITE_SUPABASE_KEY") {
        Write-Host "‚úÖ VITE_SUPABASE_KEY configurada" -ForegroundColor Green
    } else {
        Write-Host "‚ùå VITE_SUPABASE_KEY n√£o encontrada" -ForegroundColor Red
        $todosOk = $false
    }
}

Write-Host ""

# Verifica .env para backend
if (Test-Path .env) {
    $envContent = Get-Content .env -Raw
    
    if ($envContent -match "SUPABASE_URL") {
        Write-Host "‚úÖ SUPABASE_URL (backend) configurada" -ForegroundColor Green
    } else {
        Write-Host "‚ùå SUPABASE_URL (backend) n√£o encontrada" -ForegroundColor Red
        $todosOk = $false
    }
    
    if ($envContent -match "SUPABASE_KEY") {
        Write-Host "‚úÖ SUPABASE_KEY (backend) configurada" -ForegroundColor Green
    } else {
        Write-Host "‚ùå SUPABASE_KEY (backend) n√£o encontrada" -ForegroundColor Red
        $todosOk = $false
    }
}

Write-Host ""
Write-Host "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ" -ForegroundColor Gray

if ($todosOk) {
    Write-Host "‚úÖ TUDO OK! Sistema pronto para uso!" -ForegroundColor Green
    Write-Host ""
    Write-Host "üìã PR√ìXIMOS PASSOS:" -ForegroundColor Yellow
    Write-Host "1. Execute o script SQL no Supabase (supabase_auth_config.sql)" -ForegroundColor White
    Write-Host "   üëâ https://supabase.com/dashboard > SQL Editor" -ForegroundColor DarkGray
    Write-Host ""
    Write-Host "2. Desative confirma√ß√£o de email (para desenvolvimento):" -ForegroundColor White
    Write-Host "   üëâ Authentication > Settings > Desmarque 'Enable email confirmations'" -ForegroundColor DarkGray
    Write-Host ""
    Write-Host "3. Inicie o sistema:" -ForegroundColor White
    Write-Host "   npm run dev" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "4. Acesse: http://localhost:5173" -ForegroundColor White
    Write-Host ""
    Write-Host "üìñ Documenta√ß√£o: INICIO_RAPIDO_AUTH.md" -ForegroundColor Magenta
} else {
    Write-Host "‚ö†Ô∏è  Alguns arquivos est√£o faltando!" -ForegroundColor Yellow
    Write-Host "Execute o assistente novamente ou verifique a instala√ß√£o." -ForegroundColor White
}

Write-Host ""
